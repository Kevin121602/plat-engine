from os import path, makedirs

import json

from ndspy.narc import NARC

MOVE_EFFECTS = {
    0:   'NONE',
    1:   'SLEEP_STATUS',
    2:   'POISON_ON_HIT',
    3:   'RECOVER_HALF_DAMAGE_DEALT',
    4:   'BURN_ON_HIT',
    5:   'FREEZE_ON_HIT',
    6:   'PARALYZE_ON_HIT',
    7:   'SELF_DESTRUCT',
    8:   'DREAM_EATER',
    9:   'MIRROR_MOVE',
    10:  'RAISE_ATK_STATUS',
    11:  'RAISE_DEF_STATUS',
    12:  'RAISE_SPE_STATUS',
    13:  'RAISE_SPA_STATUS',
    14:  'RAISE_SPD_STATUS',
    15:  'RAISE_ACC_STATUS',
    16:  'RAISE_EVA_STATUS',
    17:  'ALWAYS_HIT',
    18:  'LOWER_ATK_STATUS',
    19:  'LOWER_DEF_STATUS',
    20:  'LOWER_SPE_STATUS',
    21:  'LOWER_SPA_STATUS',
    22:  'LOWER_SPD_STATUS',
    23:  'LOWER_ACC_STATUS',
    24:  'LOWER_EVA_STATUS',
    25:  'RESET_STAT_CHANGES',
    26:  'BIDE',
    27:  'THRASH',
    28:  'FORCE_SWITCH',
    29:  'MULTI_HIT',
    30:  'CONVERSION',
    31:  'FLINCH_ON_HIT',
    32:  'RESTORE_HALF_HP',
    33:  'BADLY_POISONS',
    34:  'PAY_DAY',
    35:  'LIGHT_SCREEN',
    36:  'RANDOM_BRN_PRZ_OR_FRZ_ON_HIT',
    37:  'REST',
    38:  'ONE_HIT_KO',
    39:  'CHARGE_TURN_HIGH_CRIT',
    40:  'SUPER_FANG',
    41:  'DRAGON_RAGE',
    42:  'BINDING',
    43:  'HIGH_CRITICAL',
    44:  'HIT_TWICE',
    45:  'CRASH_DAMAGE',
    46:  'PREVENT_STAT_REDUCTION',
    47:  'SHARPLY_RAISE_CRIT',
    48:  'RECOIL_1_4',
    49:  'CONFUSION_STATUS',
    50:  'SHARPLY_RAISE_ATK_STATUS',
    51:  'SHARPLY_RAISE_DEF_STATUS',
    52:  'SHARPLY_RAISE_SPE_STATUS',
    53:  'SHARPLY_RAISE_SPA_STATUS',
    54:  'SHARPLY_RAISE_SPD_STATUS',
    55:  'SHARPLY_RAISE_ACC_STATUS',
    56:  'SHARPLY_RAISE_EVA_STATUS',
    57:  'TRANSFORM',
    58:  'SHARPLY_LOWER_ATK_STATUS',
    59:  'SHARPLY_LOWER_DEF_STATUS',
    60:  'SHARPLY_LOWER_SPE_STATUS',
    61:  'SHARPLY_LOWER_SPA_STATUS',
    62:  'SHARPLY_LOWER_ACC_STATUS',
    63:  'SHARPLY_LOWER_EVA_STATUS',
    64:  'SHARPLY_LOWER_SPD_STATUS',
    65:  'REFLECT',
    66:  'POISON_STATUS',
    67:  'PARALYZE_STATUS',
    68:  'LOWER_ATK_ON_HIT',
    69:  'LOWER_DEF_ON_HIT',
    70:  'LOWER_SPE_ON_HIT',
    71:  'LOWER_SPA_ON_HIT',
    72:  'LOWER_SPD_ON_HIT',
    73:  'LOWER_ACC_ON_HIT',
    74:  'LOWER_EVA_ON_HIT',
    75:  'CHARGE_TURN_HIGH_CRIT_AND_FLINCH',
    76:  'CONFUSE_ON_HIT',
    77:  'HIT_TWICE_POISON_ON_HIT',
    78:  'VITAL_THROW',
    79:  'SUBSTITUTE',
    80:  'RECHARGE_TURN',
    81:  'RAISE_ATK_WHEN_HIT',
    82:  'MIMIC',
    83:  'METRONOME',
    84:  'LEECH_SEED',
    85:  'SPLASH',
    86:  'DISABLE',
    87:  'DEAL_DAMAGE_EQUAL_TO_LEVEL',
    88:  'PSYWAVE',
    89:  'COUNTER',
    90:  'ENCORE',
    91:  'PAIN_SPLIT',
    92:  'SNORE',
    93:  'CONVERSION2',
    94:  'NEXT_ATTACK_ALWAYS_HITS',
    95:  'SKETCH',
    97:  'SLEEP_TALK',
    98:  'DESTINY_BOND',
    99:  'HIGHER_POWER_WITH_LESS_HP',
    100: 'SPITE',
    101: 'LEAVE_WITH_1_HP',
    102: 'HEAL_BELL',
    103: 'PRIORITY_PLUS_1',
    104: 'TRIPLE_KICK',
    105: 'STEAL_HELD_ITEM',
    106: 'PREVENT_ESCAPE',
    107: 'NIGHTMARE',
    108: 'MINIMIZE',
    109: 'CURSE',
    111: 'PROTECT',
    112: 'SPIKES',
    113: 'FORESIGHT',
    114: 'PERISH_SONG',
    115: 'CAUSE_SANDSTORM',
    116: 'ENDURE',
    117: 'ROLLOUT',
    118: 'SHARPLY_RAISE_TARGET_ATK_AND_CONFUSE',
    119: 'DOUBLE_POWER_ON_CONSECUTIVE_HITS',
    120: 'INFATUATE',
    121: 'RETURN',
    122: 'PRESENT',
    123: 'FRUSTRATION',
    124: 'SAFEGUARD',
    125: 'THAW_AND_BURN_ON_HIT',
    126: 'MAGNITUDE',
    127: 'BATON_PASS',
    128: 'PURSUIT',
    129: 'REMOVE_HAZARDS_AND_BINDING_EFFECTS',
    130: 'SONICBOOM',
    132: 'SYNTHESIS',
    135: 'HIDDEN_POWER',
    136: 'CAUSE_RAIN',
    137: 'CAUSE_SUN',
    138: 'RAISE_DEF_ON_HIT',
    139: 'RAISE_ATK_ON_HIT',
    140: 'RAISE_ALL_ON_HIT',
    142: 'BELLY_DRUM',
    143: 'COPY_STAT_BOOSTS',
    144: 'MIRROR_COAT',
    145: 'CHARGE_TURN_RAISE_DEF',
    146: 'FLINCH_DOUBLE_DAMAGE_FLY_OR_BOUNCE',
    147: 'DOUBLE_DAMAGE_ON_DIG',
    148: 'FUTURE_SIGHT',
    149: 'DOUBLE_DAMAGE_FLY_OR_BOUNCE',
    150: 'DOUBLE_DAMAGE_MINIMIZE_FLINCH_ON_HIT',
    151: 'CHARGE_TURN_UNLESS_SUN',
    152: 'THUNDER',
    153: 'FLEE_FROM_WILD_BATTLE',
    154: 'BEAT_UP',
    155: 'FLY',
    156: 'RAISE_DEFENSE_DOUBLE_ROLLOUT_POWER',
    158: 'ALWAYS_FLINCH_ONLY_TURN_ONE',
    159: 'UPROAR',
    160: 'STOCKPILE',
    161: 'SPIT_UP',
    162: 'SWALLOW',
    164: 'CAUSE_HAIL',
    165: 'TORMENT',
    166: 'RAISE_TARGET_SPA_AND_CONFUSE',
    167: 'BURN_STATUS',
    168: 'MEMENTO',
    169: 'DOUBLE_POWER_IF_PSN_PRZ_BRN',
    170: 'FOCUS_PUNCH',
    171: 'DOUBLE_POWER_AND_CURE_PRZ',
    172: 'FOLLOW_ME',
    173: 'NATURE_POWER',
    174: 'NEXT_MOVE_DOUBLE_DAMAGE_IF_ELECTRIC',
    175: 'TAUNT',
    176: 'HELPING_HAND',
    177: 'SWITCH_HELD_ITEMS',
    178: 'COPY_ABILITY',
    179: 'WISH',
    180: 'ASSIST',
    181: 'INGRAIN',
    182: 'LOWER_USER_ATK_AND_DEF',
    183: 'MAGIC_COAT',
    184: 'RECYCLE',
    185: 'DOUBLE_DAMAGE_IF_USER_HAS_BEEN_HIT',
    186: 'REMOVE_SCREENS',
    187: 'YAWN',
    188: 'REMOVE_TARGET_HELD_ITEM',
    189: 'ENDEAVOR',
    190: 'LOWER_POWER_WITH_LESS_HP',
    191: 'SWITCH_ABILITIES',
    192: 'IMPRISON',
    193: 'CURE_BRN_PSN_OR_PRZ',
    194: 'GRUDGE',
    195: 'SNATCH',
    196: 'HIGHER_POWER_ON_HEAVIER_TARGETS',
    197: 'SECRET_POWER',
    198: 'RECOIL_1_3',
    199: 'CONFUSION_ON_HIT',
    200: 'HIGH_CRIT_BURN_ON_HIT',
    201: 'MUD_SPORT',
    202: 'BADLY_POISON_ON_HIT',
    203: 'CHANGE_TYPE_WITH_WEATHER',
    204: 'SHARPLY_LOWER_USER_SPA_ON_HIT',
    205: 'LOWER_TARGET_ATK_AND_DEF_STATUS',
    206: 'RAISE_DEF_AND_SPD_STATUS',
    207: 'SKY_UPPERCUT',
    208: 'RAISE_ATK_AND_DEF_STATUS',
    209: 'HIGH_CRIT_POISON_ON_HIT',
    210: 'WATER_SPORT',
    211: 'RAISE_SPA_AND_SPD_STATUS',
    212: 'RAISE_ATK_AND_SPE_STATUS',
    213: 'CAMOUFLAGE',
    214: 'ROOST',
    215: 'GRAVITY',
    216: 'MIRACLE_EYE',
    217: 'DOUBLE_POWER_AND_CURE_SLP',
    218: 'LOWER_SPE_ON_HIT',
    219: 'GYRO_BALL',
    220: 'HEALING_WISH',
    221: 'DOUBLE_POWER_IF_TARGET_BELOW_HALF',
    222: 'NATURAL_GIFT',
    223: 'FEINT',
    224: 'CONSUME_TARGET_BERRY',
    225: 'TAILWIND',
    226: 'ACUPRESSURE',
    227: 'METAL_BURST',
    228: 'SWITCH_OUT_ON_HIT',
    229: 'LOWER_DEF_AND_SPD_ON_HIT',
    230: 'PAYBACK',
    231: 'DOUBLE_DAMAGE_IF_TARGET_HAS_BEEN_HIT',
    232: 'EMBARGO',
    233: 'FLING',
    234: 'PSYCHO_SHIFT',
    235: 'TRUMP_CARD',
    236: 'HEAL_BLOCK',
    237: 'WRING_OUT',
    238: 'SWAP_ATK_AND_DEF_STATS',
    239: 'SUPPRESS_TARGET_ABILITY',
    240: 'LUCKY_CHANT',
    241: 'ME_FIRST',
    242: 'USE_LAST_USED_MOVE',
    243: 'POWER_SWAP',
    244: 'GUARD_SWAP',
    245: 'PUNISHMENT',
    246: 'LAST_RESORT',
    247: 'WORRY_SEED',
    248: 'SUCKER_PUNCH',
    249: 'TOXIC_SPIKES',
    250: 'SWAP_STAT_CHANGES',
    251: 'RESTORE_HP_AT_END_OF_TURN',
    252: 'MAGNET_RISE',
    253: 'RECOIL_1_3_BURN_ON_HIT',
    254: 'STRUGGLE',
    255: 'DIVE',
    256: 'DIG',
    257: 'DOUBLE_DAMAGE_ON_DIVE',
    258: 'DEFOG',
    259: 'TRICK_ROOM',
    260: 'BLIZZARD',
    261: 'WHIRLPOOL',
    262: 'RECOIL_1_3_PARALYZE_ON_HIT',
    263: 'BOUNCE',
    265: 'CAPTIVATE',
    266: 'STEALTH_ROCK',
    267: 'CHATTER',
    268: 'JUDGMENT',
    269: 'RECOIL_1_2',
    270: 'LUNAR_DANCE',
    271: 'SHARPLY_LOWER_SPD_ON_HIT',
    272: 'SHADOW_FORCE',
    273: 'FLINCH_BURN_ON_HIT',
    274: 'FLINCH_FREEZE_ON_HIT',
    275: 'FLINCH_PARALYZE_ON_HIT',
    276: 'RAISE_SPA_ON_HIT',
}

PSS = [
    'PHYSICAL',
    'SPECIAL',
    'STATUS',
]

TYPES = [
    'NORMAL',
    'FIGHTING',
    'FLYING',
    'POISON',
    'GROUND',
    'ROCK',
    'BUG',
    'GHOST',
    'STEEL',
    '???',
    'FIRE',
    'WATER',
    'GRASS',
    'ELECTRIC',
    'PSYCHIC',
    'ICE',
    'DRAGON',
    'DARK'
]

TARGETS = {
    0:    'ANY_SINGLE_TARGET',
    1:    'AUTOMATIC',
    2:    'RANDOM',
    4:    'BOTH_OPPONENTS',
    8:    'BOTH_OPPONENTS_AND_ALLY',
    16:   'USER',
    32:   'USER_SIDE',
    64:   'ENTIRE_FIELD',
    128:  'OPPONENT_SIDE',
    256:  'HELPING_HAND',
    512:  'ACUPRESSURE',
    1024: 'ME_FIRST',
}

def decompile(i: int, move_data: bytes) -> dict:
    effect = int.from_bytes(move_data[0:2],  'little')
    pss    = move_data[2]
    power  = move_data[3]
    btype  = move_data[4]
    hit    = move_data[5]
    pp     = move_data[6]
    chance = move_data[7]
    target = int.from_bytes(move_data[8:10], 'little')
    prio   = move_data[10]
    flags  = move_data[11]
    appeal = move_data[12]
    ctype  = move_data[13]

    prio   = prio if prio <= 128 else prio - 256

    contact     = bool(flags & 0x01)
    protect     = bool(flags & 0x02)
    magic_coat  = bool(flags & 0x04)
    snatch      = bool(flags & 0x08)
    mirror_move = bool(flags & 0x10)
    kings_rock  = bool(flags & 0x20)
    hide_bars   = bool(flags & 0x40)
    hide_shadow = bool(flags & 0x80)

    return {
        'battle_effect': MOVE_EFFECTS[effect],
        'pss': PSS[pss],
        'power': power,
        'type': TYPES[btype],
        'accuracy': hit,
        'pp': pp,
        'effect_chance_percent': chance,
        'target': TARGETS[target],
        'priority': prio,
        'flags': {
            'make_contact': contact,
            'blocked_by_protect': protect,
            'bounced_by_magic_coat': magic_coat,
            'stolen_by_snatch': snatch,
            'can_be_mirror_moved': mirror_move,
            'triggers_kings_rock': kings_rock,
            'animation_hides_hp_bars': hide_bars,
            'animation_hides_shadow': hide_shadow
        },
        'contest_appeal': appeal,
        'contest_type': ctype,
    }

def dump_narc(rom_base_dir: str, dump_target: str):
    if not path.isdir(path.dirname(dump_target)):
        makedirs(dump_path)
    
    data_dict = {}

    narc_path = path.join(rom_base_dir, 'data/poketool/waza/pl_waza_tbl.narc')
    narc = NARC.fromFile(narc_path)
    for i in range(len(narc.files)):
        data = narc.files[i]
        data_dict[i] = decompile(i, data)
    
    with open(dump_target, 'w') as fout:
        json.dump(data_dict, fout, indent=4)
